// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model dem_data {
  id            Int      @id @default(autoincrement())
  region_id     Int?
  avg_elevation Int?
  regions       regions? @relation(fields: [region_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model flood_impact_area {
  id        Int       @id @default(autoincrement())
  region_id Int?
  datetime  DateTime? @default(now()) @db.Timestamptz(6)
  regions   regions?  @relation(fields: [region_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_region")
}

model regions {
  id                Int                     @id @default(autoincrement())
  uuid              String?                 @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name              String                  @db.VarChar(255)
  description       String?
  geom              Unsupported("geometry")
  parent_id         Int?
  dem_data          dem_data[]
  flood_impact_area flood_impact_area[]
  regions           regions?                @relation("regionsToregions", fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_regions_parent")
  other_regions     regions[]               @relation("regionsToregions")
  water_levels      water_levels[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model spatial_ref_sys {
  srid      Int     @id
  auth_name String? @db.VarChar(256)
  auth_srid Int?
  srtext    String? @db.VarChar(2048)
  proj4text String? @db.VarChar(2048)
}

model water_levels {
  id               Int       @id @default(autoincrement())
  datetime         DateTime? @default(now()) @db.Timestamptz(6)
  levels_in_meters Decimal   @db.Decimal(6, 2)
  region_id        Int?
  regions          regions?  @relation(fields: [region_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}
